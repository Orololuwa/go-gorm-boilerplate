create_table("users") {
    t.Column("id", "integer", { primary: true })
    t.Column("email", "string", {})
    t.Column("first_name", "string", {})
    t.Column("last_name", "string", {})
    t.Column("phone", "string", {})
    t.Column("password", "string", { size: 60, null: true })
    t.Column("avatar", "string", { null: true })
    t.Column("gender", "string", { null: true })
    t.Column("created_at", "timestamp", { default_raw: "CURRENT_TIMESTAMP" })
    t.Column("updated_at", "timestamp", { default_raw: "CURRENT_TIMESTAMP" })
}

sql(`CREATE OR REPLACE FUNCTION update_timestamp_users()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';`)

sql(`CREATE TRIGGER update_timestamp_businesses_trigger
BEFORE UPDATE ON users
FOR EACH ROW
WHEN (NEW.updated_at IS DISTINCT FROM OLD.updated_at)
EXECUTE FUNCTION update_timestamp_users();`)
